version: '3.8'
services:
  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "8000:80"  # Host port 8000 mapped to container port 80
    environment:
      - DATABASE_URL=postgresql://user:pass@db:5432/aclima_db
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    depends_on:
      - db
      - kafka
    networks:
      - app-network

  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: aclima_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  test:
    build:
      context: ..
      dockerfile: docker/Dockerfile.test
    environment:
      - DATABASE_URL=postgresql://user:pass@db:5432/test_db
      - API_BASE_URL=http://web:80
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - PYTEST_ADDOPTS="--asyncio-mode=auto"
    volumes:
      - ../tests:/app/tests
    command: >
      sh -c "
        echo 'Waiting for Kafka...' &&
        while ! nc -z kafka 29092; do sleep 1; done &&
        echo 'Kafka is ready!' &&
        pytest tests/kafka/ -v
      "
    depends_on:
      - web
      - db
      - kafka
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:7.5.1
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://0.0.0.0:9092,CONTROLLER://kafka:29093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
    networks:
      - app-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
    depends_on:
      - kafka
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
